/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const FormProvider: typeof import('react-hook-form')['FormProvider']
  const NextIntlClientProvider: typeof import('next-intl')['NextIntlClientProvider']
  const QueryClient: typeof import('@tanstack/react-query')['QueryClient']
  const QueryClientProvider: typeof import('@tanstack/react-query')['QueryClientProvider']
  const axios: typeof import('axios')['default']
  const camelCase: typeof import('lodash-es')['camelCase']
  const classVariant: typeof import('class-variance-authority')['cva']
  const clsx: typeof import('clsx')['default']
  const create: typeof import('zustand')['create']
  const createRef: typeof import('react')['createRef']
  const createStore: typeof import('../shared/utils')['createStore']
  const dayjs: typeof import('dayjs')['default']
  const endsWith: typeof import('lodash-es')['endsWith']
  const every: typeof import('lodash-es')['every']
  const filter: typeof import('lodash-es')['filter']
  const find: typeof import('lodash-es')['find']
  const findLast: typeof import('lodash-es')['findLast']
  const flatten: typeof import('lodash-es')['flatten']
  const forEach: typeof import('lodash-es')['forEach']
  const forwardRef: typeof import('react')['forwardRef']
  const generateSelectors: typeof import('../shared/utils')['generateSelectors']
  const get: typeof import('lodash-es')['get']
  const groupBy: typeof import('lodash-es')['groupBy']
  const head: typeof import('lodash-es')['head']
  const includes: typeof import('lodash-es')['includes']
  const isArray: typeof import('lodash-es')['isArray']
  const isBoolean: typeof import('lodash-es')['isBoolean']
  const isEmpty: typeof import('lodash-es')['isEmpty']
  const isNull: typeof import('lodash-es')['isNull']
  const isNumber: typeof import('lodash-es')['isNumber']
  const isString: typeof import('lodash-es')['isString']
  const isUndefined: typeof import('lodash-es')['isUndefined']
  const join: typeof import('lodash-es')['join']
  const kebabCase: typeof import('lodash-es')['kebabCase']
  const keys: typeof import('lodash-es')['keys']
  const last: typeof import('lodash-es')['last']
  const lazy: typeof import('react')['lazy']
  const lazyload: typeof import('../shared/component')['lazyload']
  const lazyloadWithLoader: typeof import('../shared/component')['lazyloadWithLoader']
  const lowerCase: typeof import('lodash-es')['lowerCase']
  const map: typeof import('lodash-es')['map']
  const memo: typeof import('react')['memo']
  const normalizeAndLowerCase: typeof import('../shared/utils')['normalizeAndLowerCase']
  const omitBy: typeof import('lodash-es')['omitBy']
  const orderBy: typeof import('lodash-es')['orderBy']
  const range: typeof import('lodash-es')['range']
  const reduce: typeof import('lodash-es')['reduce']
  const replace: typeof import('lodash-es')['replace']
  const resetAllStores: typeof import('../shared/utils')['resetAllStores']
  const set: typeof import('lodash-es')['set']
  const size: typeof import('lodash-es')['size']
  const some: typeof import('lodash-es')['some']
  const split: typeof import('lodash-es')['split']
  const startTransition: typeof import('react')['startTransition']
  const toLower: typeof import('lodash-es')['toLower']
  const toNumber: typeof import('lodash-es')['toNumber']
  const toPairs: typeof import('lodash-es')['toPairs']
  const toString: typeof import('lodash-es')['toString']
  const trim: typeof import('lodash-es')['trim']
  const twMerge: typeof import('tailwind-merge')['twMerge']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useController: typeof import('react-hook-form')['useController']
  const useCookie: typeof import('../shared/custom-hooks')['useCookie']
  const useDateTime: typeof import('../shared/custom-hooks')['useDateTime']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useDownloadFile: typeof import('../shared/custom-hooks')['useDownloadFile']
  const useEffect: typeof import('react')['useEffect']
  const useFieldArray: typeof import('react-hook-form')['useFieldArray']
  const useForm: typeof import('react-hook-form')['useForm']
  const useFormContext: typeof import('react-hook-form')['useFormContext']
  const useFormValidator: typeof import('../shared/custom-hooks')['useFormValidator']
  const useHttpRequest: typeof import('../shared/custom-hooks')['useHttpRequest']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInfiniteQuery: typeof import('@tanstack/react-query')['useInfiniteQuery']
  const useInfiniteRequest: typeof import('../shared/custom-hooks')['useInfiniteRequest']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useMemo: typeof import('react')['useMemo']
  const useModalState: typeof import('../shared/custom-hooks')['useModalState']
  const useMultipleRequests: typeof import('../shared/custom-hooks')['useMultipleRequests']
  const useMutation: typeof import('@tanstack/react-query')['useMutation']
  const useQueries: typeof import('@tanstack/react-query')['useQueries']
  const useQuery: typeof import('@tanstack/react-query')['useQuery']
  const useQueryClient: typeof import('@tanstack/react-query')['useQueryClient']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useRequest: typeof import('../shared/custom-hooks')['useRequest']
  const useSocket: typeof import('../shared/custom-hooks')['useSocket']
  const useState: typeof import('react')['useState']
  const useStorage: typeof import('../shared/custom-hooks')['useStorage']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
  const useTranslations: typeof import('next-intl')['useTranslations']
  const useUser: typeof import('../shared/custom-hooks')['useUser']
  const useWatch: typeof import('react-hook-form')['useWatch']
  const values: typeof import('lodash-es')['values']
  const windowRedirect: typeof import('../shared/utils')['windowRedirect']
  const words: typeof import('lodash-es')['words']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { VariantProps } from 'class-variance-authority'
  import('class-variance-authority')
  // @ts-ignore
  export type { ClassValue } from 'clsx'
  import('clsx')
  // @ts-ignore
  export type { QueryKey, UseQueryOptions, UseQueryResult, QueriesResults, QueriesOptions, UseInfiniteQueryResult, UseInfiniteQueryOptions, QueryObserverResult } from '@tanstack/react-query'
  import('@tanstack/react-query')
  // @ts-ignore
  export type { StoreApi, UseBoundStore, StateCreator } from 'zustand'
  import('zustand')
  // @ts-ignore
  export type { Path, PathValue, FieldErrors, Control, RegisterOptions, UseFormGetValues, UseFormReturn, FieldValues, FieldArrayWithId, UseFormSetValue, UseFormSetError, UseFormHandleSubmit } from 'react-hook-form'
  import('react-hook-form')
  // @ts-ignore
  export type { FunctionComponent, ReactNode, ReactElement, Key, MouseEvent as ReactMouseEvent, KeyboardEvent as ReactKeyboardEvent, ComponentType, ComponentProps, ChangeEvent, Ref, RefObject, Dispatch, SetStateAction, CSSProperties } from 'react'
  import('react')
  // @ts-ignore
  export type { AxiosInstance, AxiosResponse, AxiosError, InternalAxiosRequestConfig, AxiosRequestConfig, AxiosPromise } from 'axios'
  import('axios')
  // @ts-ignore
  export type { Dayjs, QUnitType, ConfigType, OpUnitType, ManipulateType } from 'dayjs'
  import('dayjs')
  // @ts-ignore
  export type { Metadata, MetadataRoute } from 'next'
  import('next')
}
